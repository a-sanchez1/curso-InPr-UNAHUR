/*@ATTRIBUTE@tooltip@
     PROPÓSITO: Poner cemento en la celda actual
     PRECONDICIONES: 
       * o bien la celda actual debe estar vacía, 
       * o bien debe tener un ladrillo entero en la parte
         inferior, sin cemento sobre él
  @*/
procedure PonerCemento() {
  if (aux_LaCeldaEstáVacíaYHayBase() || aux_HayLadrilloEnHileraInferiorSinCemento()) {
    Aux_PonerCementoEnHilera()
  } else {
    BOOM("No puedo poner cemento en esta celda")
  }
}

/*@ATTRIBUTE@tooltip@
     PROPÓSITO: Poner un ladrillo en la celda actual
     PRECONDICIONES: 
      * si no hay ladrillos en la celda actual, debe haber
        cemento en la misma
      * si hay un ladrillo entero en la celda actual, debe haber
        cemento sobre el mismo, y debe existir una celda al Oeste
        que ya contenga un ladrillo entero y medio ladrillo del
        lado izquierdo
  @*/
procedure PonerLadrillo() {
  if (aux_HayCementoEnHileraInferior() && not aux_HayLadrilloEnHileraInferior()) {
    Aux_PonerLadrilloEnHileraInferior()
  } elseif (aux_PuedoPonerLadrilloEnHileraSuperior()) { 
    Mover(Oeste)
    Aux_PonerMedioLadrilloAl(Este)
    Mover(Este)
    Aux_PonerMedioLadrilloAl(Oeste)
  } else {
    BOOM("No puedo poner un ladrillo")
  }
}

/*@ATTRIBUTE@tooltip@
     PROPÓSITO: Poner medio ladrillo en la celda actual
     PRECONDICIONES: 
      * la celda actual debe estar en el borde Oeste
      * debe haber un ladrillo entero en la parte inferior de la
        celda actual, y cemento sobre él
  @*/
procedure PonerMedioLadrilloEnElBordeIzquierdo() {
  if (not puedeMover(Oeste)) {
    Aux_PonerMedioLadrilloAl(Oeste)
  }
  else {
    BOOM("Solo puedo poner medio ladrillo en el borde")
  }
}

/*@ATTRIBUTE@tooltip@
     PROPÓSITO: Poner medio ladrillo en la celda actual
     PRECONDICIONES: 
      * la celda actual debe estar en el borde Este
      * debe haber un ladrillo entero en la parte inferior de la
        celda actual, cemento sobre él, y medio ladrillo del lado
        izquierdo de la celda
  @*/
procedure PonerMedioLadrilloEnElBordeDerecho() {
  if (not puedeMover(Este)) {
    Aux_PonerMedioLadrilloAl(Este)
  }
  else {
    BOOM("Solo puedo poner medio ladrillo en el borde")
  }
}

procedure Aux_PonerMedioLadrilloAl(dir) {
  if (dir==Oeste && aux_HayCementoEnLaHileraSuperior()) {
    Aux_PonerMedioLadrilloIzquierdoEnHileraSuperior()
  } elseif (dir==Este  && aux_HayMedioLadrilloAlOeste()) {
    Aux_PonerMedioLadrilloDerechoEnHileraSuperior()
  } else {
    BOOM("No puedo poner medio ladrillo acá")
  }
}

procedure Aux_PonerCementoEnHilera() {
  Poner(Rojo)
}

procedure Aux_PonerLadrilloEnHileraInferior() {
  Poner(Verde)
}

procedure Aux_PonerMedioLadrilloIzquierdoEnHileraSuperior() {
  Poner(Azul)
}

procedure Aux_PonerMedioLadrilloDerechoEnHileraSuperior() {
  Poner(Negro)
}

function aux_LaCeldaEstáVacíaYHayBase() {
  return(aux_LaCeldaEstáVacía() && aux_HayBase())
}

function aux_HayBase() {
  return(not puedeMover(Sur) || aux_HayBaseAl(Sur))
}

function aux_HayBaseAl(dir) {
  Mover(dir)
  return (aux_LaCeldaEstáCompleta())
}

function aux_LaCeldaEstáVacía() {
  return(not hayBolitas(Azul) && not hayBolitas(Negro)
      && not hayBolitas(Rojo) && not hayBolitas(Verde))
}

function aux_LaCeldaEstáCompleta() {
  return(
    aux_HayLadrilloEnHileraInferior() &&
    aux_HayMedioLadrilloAlOeste() && aux_HayMedioLadrilloAlEste()
  )
}

function aux_HayLadrilloEnHileraInferiorSinCemento() {
  return(aux_HayLadrilloEnHileraInferior() && not aux_HayCementoEnLaHileraSuperior())
}

function aux_PuedoPonerLadrilloEnHileraSuperior() {
  return(puedeMover(Oeste) 
      && aux_HayCementoEnLaHileraSuperiorAlOeste()
      && aux_HayCementoEnLaHileraSuperior())
}

function aux_HayCementoEnLaHileraSuperiorAlOeste() {
  Mover(Oeste)
  return(aux_HayCementoEnLaHileraSuperior())
}

function aux_HayCementoEnHileraInferior() {
  return(nroBolitas(Rojo)==1)
}

function aux_HayCementoEnLaHileraSuperior() {
  return(nroBolitas(Rojo)==2)
}

function aux_HayLadrilloEnHileraInferior() {
  return(hayBolitas(Verde))
}

function aux_HayMedioLadrilloAlOeste() {
  return(hayBolitas(Azul))
}

function aux_HayMedioLadrilloAlEste() {
  return(hayBolitas(Negro))
}

