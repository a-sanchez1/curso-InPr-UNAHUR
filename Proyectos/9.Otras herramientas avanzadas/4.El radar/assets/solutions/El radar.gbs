program { SimularUnRadar() }

procedure SimularUnRadar() {
  if (hayEnCuadrante(Rojo, Norte, Oeste)) { Poner(Azul)  }
  if (hayEnCuadrante(Rojo, Norte, Este))  { Poner(Negro) }
  if (hayEnCuadrante(Rojo, Sur,   Este))  { Poner(Verde) }
  if (hayEnCuadrante(Rojo, Sur,   Oeste)) { Poner(Rojo)  }
}

function hayEnCuadrante(color, dirección1, dirección2) {
  BuscarEnCuadrante(color, dirección1, dirección2)
  return (hayBolitas(color))
}

procedure BuscarEnCuadrante(colorABuscar, direcciónPrincipal, direcciónSecundaria) {
  anchoDelCuadrante := distanciaAlBorde(direcciónPrincipal)
  while (not (hayBolitas(colorABuscar)) && not (esLaÚltimaCelda(direcciónPrincipal, direcciónSecundaria))) 
    { IrALaSiguienteCelda(anchoDelCuadrante, direcciónPrincipal, direcciónSecundaria) }
}

procedure IrALaSiguienteCelda(ancho, direcciónPrincipal, direcciónSecundaria) {
  if (puedeMover(direcciónPrincipal)) 
        { Mover(direcciónPrincipal) }
   else {
          Mover__Veces(opuesto(direcciónPrincipal), ancho)
          Mover(direcciónSecundaria)
        }
}

function esLaÚltimaCelda(dirección1, dirección2) {
  return (not (puedeMover(dirección1)) && not (puedeMover(dirección2)))
}

function distanciaAlBorde(direcciónAMedir) {
  cantidadDePasosAvanzados := 0
  while (puedeMover(direcciónAMedir)) {
    Mover(direcciónAMedir)
    cantidadDePasosAvanzados := cantidadDePasosAvanzados + 1
  }
  return (cantidadDePasosAvanzados)
}
